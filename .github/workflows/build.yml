name: Build Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package Binary with LICENSE
        shell: bash
        run: |
          mkdir -p staging

          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            BIN_NAME=mk.exe
          else
            BIN_NAME=mk
          fi

          cp target/${{ matrix.target }}/release/$BIN_NAME staging/$BIN_NAME
          cp LICENSE staging/LICENSE

          mkdir dist

          cd staging
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell.exe -Command "Compress-Archive -Path $BIN_NAME, LICENSE -DestinationPath ../dist/mk-${{ matrix.target }}.zip"
          else
            tar -czf ../dist/mk-${{ matrix.target }}.tar.gz $BIN_NAME LICENSE
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: "dist/*"

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/**/*"
          tag: ${{ steps.get_tag.outputs.tag  }}
          name: Release ${{ steps.get_tag.outputs.tag }}
